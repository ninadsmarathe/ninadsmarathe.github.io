{
    "version": 3,
    "sources": ["styles/Styles.module.css", "config/userData.js", "components/surround/Footer.js", "components/surround/Navbar.js", "components/home/Landing.js", "components/home/Me.js", "components/home/ProjectCard.js", "components/home/Projects.js", "components/home/Experience.js", "components/home/Education.js", "components/home/Skills.js", "pages/Home.js", "App.js", "serviceWorker.js", "index.js"],
    "names": ["module", "exports", "Footer", "useState", "backgroundColor", "bgStyle", "style", "className", "Navbar", "props", "userData", "firstName", "isTop", "setIsTop", "useEffect", "document", "addEventListener", "istop", "window", "scrollY", "href", "type", "data-toggle", "data-target", "aria-controls", "aria-expanded", "aria-label", "id", "styles", "navbarDiv", "rightHeader", "Landing", "lastName", "headline", "icons", "Array", "length", "fill", "hoverstatus", "setHoverstatus", "toggleHover", "data", "newhoverStatus", "event", "icon", "undefined", "cursor", "show", "map", "key", "target", "rel", "url", "handle", "image", "split", "onMouseOver", "onMouseOut", "Me", "instaLink", "instaQuerry", "desc1", "desc2", "description1", "description2", "instagramId", "myDescription", "localStorage", "getItem", "JSON", "parse", "instaProfilePic", "setInstaProfilePic", "showInsta", "setShowInsta", "handleRequest", "e", "axios", "get", "then", "response", "graphql", "user", "profile_pic_url_hd", "catch", "error", "console", "message", "aboutBg", "meImg", "src", "alt", "beginQuote", "quotes", "fullDescDiv1", "endQuote", "ProjectCard", "updated_at", "setUpdatedAt", "projectData", "name", "svn_url", "stargazers_count", "pushed_at", "date", "Date", "diff", "getTime", "hours", "Math", "trunc", "toString", "day", "getDate", "monthIndex", "getMonth", "year", "getFullYear", "projectCard", "projectHeader", "projDate", "projectDates", "projectDevParent", "projDesc", "projectDesc", "cloneAndRepoBtnDiv", "Button", "cloneBtn", "variant", "Projects", "gitHubLink", "githubId", "repos", "gitHubQuerry", "projectsArray", "setProjectsArray", "log", "gitRepos", "i", "repoObj", "includes", "push", "onlyNameArr", "dummyobj", "err", "projectsPage", "join", "project", "Experience", "experience", "expDisplay", "setExpDisplay", "item", "Card", "expMainCard", "Body", "expHeader", "expCompanyAndTitle", "expTitle", "expCompany", "expDateAndPlace", "expDate", "expPlace", "deets", "dottedLine", "experiencePage", "Education", "education", "eduDisplay", "setEduDisplay", "isFlippedObj", "setIsFlippedObj", "isChanged", "setIsChanged", "handleClick", "preventDefault", "tempObj", "stringify", "eduCardDivBothSides", "isFlipped", "indexOf", "flipDirection", "flipSpeedBackToFront", "flipSpeedFrontToBack", "infinite", "eduCardMain", "Text", "eduHeader", "eduHeaderLeft", "eduDegree", "eduClg", "eduHeaderRight", "eduDeets", "eduFooter", "onClick", "eduBtn", "eduCardMainBack", "eduBackHeaderLabel", "course", "Badge", "courseBadge", "educationPage", "eduCardsParentParent", "eduCardsParent", "Skills", "skills", "skillsDisplay", "setSkillsDisplay", "skill", "eachSkill", "skillPage", "skillsDisplayDiv", "Home", "App", "Boolean", "location", "hostname", "match", "ReactDOM", "render", "getElementById", "navigator", "serviceWorker", "ready", "registration", "unregister"],
    "mappings": "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",
    "file": "static/js/main.f6d6bf55.chunk.js",
    "sourcesContent": ["// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectHeader\":\"Styles_projectHeader__28Vmh\",\"projectCard\":\"Styles_projectCard__3p33t\",\"projDesc\":\"Styles_projDesc__sEkQy\",\"navbarDiv\":\"Styles_navbarDiv__6rBd4\",\"creatorName\":\"Styles_creatorName__3G3KM\",\"rightHeader\":\"Styles_rightHeader__1w20b\",\"aboutBg\":\"Styles_aboutBg__1Rl1S\",\"projectsPage\":\"Styles_projectsPage__3otE_\",\"projectDevParent\":\"Styles_projectDevParent__V_Ri_\",\"projDate\":\"Styles_projDate__1fkBK\",\"cloneBtn\":\"Styles_cloneBtn__1Gtbc\",\"cloneAndRepoBtnDiv\":\"Styles_cloneAndRepoBtnDiv__2PqUL\",\"fullDescDiv1\":\"Styles_fullDescDiv1__oRt-r\",\"endQuote\":\"Styles_endQuote__3ozo-\",\"quotes\":\"Styles_quotes__2xHg5\",\"beginQuote\":\"Styles_beginQuote__U0vy5\",\"experiencePage\":\"Styles_experiencePage__1PYUb\",\"hr\":\"Styles_hr__2y2Ca\",\"expMainCard\":\"Styles_expMainCard__6Dk_C\",\"expHeader\":\"Styles_expHeader__2gJeR\",\"expDateAndPlace\":\"Styles_expDateAndPlace__3oDvb\",\"expCompanyAndTitle\":\"Styles_expCompanyAndTitle__1uCmt\",\"dottedLine\":\"Styles_dottedLine__2Qarm\",\"educationPage\":\"Styles_educationPage__QNdUY\",\"eduCardsParentParent\":\"Styles_eduCardsParentParent__yYYMz\",\"eduCardsParent\":\"Styles_eduCardsParent__2TyjN\",\"eduCardDivBothSides\":\"Styles_eduCardDivBothSides__1iFoY\",\"eduFooter\":\"Styles_eduFooter__4lfVu\",\"eduDegree\":\"Styles_eduDegree__nUHDF\",\"eduClg\":\"Styles_eduClg__3PPr5\",\"eduCardMain\":\"Styles_eduCardMain__WwTtE\",\"eduHeader\":\"Styles_eduHeader__18YL3\",\"eduHeaderRight\":\"Styles_eduHeaderRight__3q4yc\",\"eduDeets\":\"Styles_eduDeets__1jfs_\",\"courseBadge\":\"Styles_courseBadge__2FXOB\",\"eduBackHeaderLabel\":\"Styles_eduBackHeaderLabel__1miWk\",\"eduCardMainBack\":\"Styles_eduCardMainBack__222MF\",\"eachSkill\":\"Styles_eachSkill__2-CbW\",\"skillPage\":\"Styles_skillPage__2QILe\",\"meImg\":\"Styles_meImg__3XlDo\",\"aboutMeText\":\"Styles_aboutMeText__Fl-Jm\",\"textBoxStyle\":\"Styles_textBoxStyle__1ZqKm\",\"modalFooter\":\"Styles_modalFooter__QuQLs\",\"footerBtn\":\"Styles_footerBtn__1T_aR\",\"formRow\":\"Styles_formRow__kW0EV\",\"addRemoveBtnGrp\":\"Styles_addRemoveBtnGrp__2q2f7\",\"meDiv\":\"Styles_meDiv__1tQDt\",\"downloadModalBody\":\"Styles_downloadModalBody__34jD0\",\"downloadModalFooter\":\"Styles_downloadModalFooter__16nfX\",\"downloadModalGitUrl\":\"Styles_downloadModalGitUrl__a7zKR\",\"downloadModalNote\":\"Styles_downloadModalNote__3PKYU\",\"downloadModalFooterBtn\":\"Styles_downloadModalFooterBtn__1asme\",\"smallsubtitleCreatePage\":\"Styles_smallsubtitleCreatePage__17GqD\",\"projCardFooter\":\"Styles_projCardFooter__1UKWv\"};", "let userData ={\"firstName\":\"Prachal \",\"lastName\":\"Patel\",\"headline\":\"Software Engineering | Cloud | Full Stack | DevOps | ML\",\"linkedinId\":\"prachal80\",\"githubId\":\"prachal80\",\"instagramId\":\"prachal_patel\",\"facebookId\":null,\"twitterId\":\"prachal_patel80\",\"mediumId\":null,\"description1\":\"Pursuing Master's of Science in Software Engineering at San Jose State University, San Jose, CA will be to graduating in May 2021.\\n\\nInterested in DevOps, Full-stack development, Backend development, development of micro-services, & distributed systems. I have done projects, research in the field of Computer Vision/Deep Learning. \\n\\nCurrently interning at ADX Labs as a Software Engineer intern and working on the development of the product from scratch. Will be closely working with Kubernetes, GitLab, and Monitoring tools such as VMWare Tanzu and VMWare Bitfusion for cluster management. Configuring Kubernetes cluster and managing dependencies for the product software. Writing REST APIs in Python and preparing POCs for the product release.\",\"description2\":null,\"githubRepos\":null,\"skills\":\"Java, JavaScript, Python, Golang, C++, Docker, Kubernetes, Kafka, Postman, GraphQL, MySQL, MongoDB, Redis Caching, React, Node, Redux, RESTful API services, HTML, CSS, Bootstrap, Mocha, JMeter, JUnit, GitHub, Linux/Unix, Object-Oriented Design, Scrum, AWS, Google Cloud Platform, Kong API Gateway, TensorFlow, NLP, NumPy, Pandas\",\"icons\":[{\"id\":0,\"image\":\"fa-github\",\"url\":\"https://github.com/\",\"handle\":\"prachal80\",\"style\":\"socialicons\"},{\"id\":1,\"image\":\"fa-facebook\",\"url\":\"https://www.facebook.com/\",\"handle\":null,\"style\":\"socialicons\"},{\"id\":2,\"image\":\"fa-instagram\",\"url\":\"https://www.instagram.com/\",\"handle\":\"prachal_patel\",\"style\":\"socialicons\"},{\"id\":3,\"image\":\"fa-linkedin\",\"url\":\"https://www.linkedin.com/in/\",\"handle\":\"prachal80\",\"style\":\"socialicons\"},{\"id\":4,\"image\":\"fa-twitter\",\"url\":\"https://www.twitter.com/\",\"handle\":\"prachal_patel80\",\"style\":\"socialicons\"},{\"id\":5,\"image\":\"fa-medium\",\"url\":\"https://www.medium.com/\",\"handle\":null,\"style\":\"socialicons\"}],\"experience\":[[\"Software Engineer Intern\",\"ADX Labs\",\"Dec 2020 - Present\",\"Minneapolis, USA (Remote)\",[\"Collaborate with software developers, project managers, and business development in supporting new features and services.\",\"Configure on-prem server infrastructure for MLaaS product developed for on-demand remote deep learning model training.\",\" Use GitLab to create automated CI/CD pipelines to achieve zero downtime for the model deployments with high performance. Work with Kubernetes and Docker containers on the VMware Tanzu platform to provide autoscaling and rolling update support.\"]],[\"Graduate Teaching Assistant\",\"San Jose State University\",\"August 2020 - Present\",\"San Jose, CA\",[\"Volunteering Teaching Assistant for the class CMPE 273: Enterprise Distributed Systems which has a tech stack as below. I enjoyed the class in the Fall 2020 semester and had a chance to learn a lot of new stuff happening in the industry. So, I took the opportunity to volunteer as a TA to help Professor and Students in their learning journey.\\n\",\"Responsible for taking sessions on Software Quality Assurance, Network & Information security, and Python programming.\",\"Helped professors to create assignments, projects, grade them, and ensuring students understood the concepts well. Prepared and presented effective demonstrations in order to help 150 students on their projects and assignments.\"]],[\"Computer Vision Intern\",\"Ahmedabad University\",\"July 2018 - May 2019\",\"Ahmedabad, India\",[\"Worked on the problem of real-time person identification using a soft biometric attribute gait (walking style of a person).\",\"Used semantic segmentation to extract person with TensorFlow instances from video to remove background and binarize the input.\\n\",\"Developed a project pipeline for the model which was deployed on AWS cloud for use in the real-world environment. Achieved the accuracy of 96% on real-time person identification that can improve the security structure of a surveillance system.\\n\"]],[\"Software Engineer Intern\",\"Fx Data Labs\",\"April 2018- June 2018\",\"Ahmedabad, India\",[\"Collaborated with frontend engineers and software developers to develop clean and maintainable RESTful API services.\\n\",\"Created a weather prediction model using Regression, TensorFlow, Python, and made a web application for that.\\n\",\"Performed sentiment analysis for restaurant reviews using Natural Language Processing to help businesses to flourish.\\n\"]]],\"education\":[[\"Master of Science\",\"Software Engineering\",\"San Jose State University\",\"August 2019\",\"May 2021\",\"San Jose, CA\",[\"I had a chance to pursue Master of Science in Software Engineering at world's most empowering tech hub. Since then, my passion for building impactful software has been tremendously increasing. Due to the increasing demand for cloud-based ML solutions in the industry, companies need to come up with innovative solutions for the existing problems\\n\",\"Specializing in Cloud Technology and Distributed Software. Creating and finding ways to enhance microservices, RESTful services, MERN applications by using the potency of the cloud.\",\"GPA: 3.78/4.00\"],[\"Enterprise Distributed Systems\",\" Cloud Technologies\",\" Enterprise Software Platforms\",\" Software Systems Engineering\"]],[\"Bachelor of Engineering\",\"Information Technology\",\"Gujarat Technological University\",\"August 2015\",\"May 2015\",\"Ahmedabad, India\",[\"As a means of preparation, I put forth the academic record that places me among the top students of my university, not only in terms of grades obtained but also in areas of project work, professional internships and interaction with professionals, and undertaking specific research in order to present technical papers.\",\"As a means of preparation, I put forth the academic record that placed me among the top students of my university, not only in terms of grades obtained but also in areas of project work, professional internships and interaction with professionals, and undertaking specific research in order to present technical papers.\",\"GPA: 3.90/4.00\"],[\"Data Structures\",\" Analysis and Design of Algorithms\",\" Database Management Systems\",\" Web Technologies\",\" Artificial Intelligence\",\" Image Processing\",\" Object-oriented programming using Java\",\" \"]]],\"repos\":[\"glassdoor-prototype\",\"Yelp-MERN-STACK\",\"BookMyTicket\",\"NoSQL Distributed database\",\"Instagram-Clone\",\"SmartPDF\",\"News-Article-Analysis-using-NLP\"],\"projectDates\":{\"glassdoor-prototype\":\"October 2020 - December 2020\",\"Yelp-MERN-STACK\":\"August 2020 - October 2020\",\"BookMyTicket\":\"October 2019 - December 2019\",\"NoSQL Distributed database\":\"August 2019 - October 2019\",\"Instagram-Clone\":\"May 2020 - July 2020\",\"SmartPDF\":\"\",\"News-Article-Analysis-using-NLP\":\"March 2020 - May 2020\"},\"projectDesc\":{\"glassdoor-prototype\":[\"Lead a team of 4 people to design and develop a fully functional, scalable prototype of Glassdoor web application. \",\"Responsible for the frontend of the application developed employer side functionalities in React JS integrated with Kafka services.\"],\"Yelp-MERN-STACK\":[\"Developed a clone of the Yelp restaurant system with functionalities of yelp using React, Node & AWS cloud for deployment.\",\"Increased the scalability of the system by using Kafka streaming and deployed the application on AWS EC2 and database on RDS.\"],\"BookMyTicket\":[\"Developed a multi-cloud SaaS application for online movie booking integrated with independent microservices. Deployed UI on GCP with Kong API Gateway.\",\"Wrote backend RESTful API calls in Golang for show management and booking and deployed on the Kubernetes cluster.\"],\"NoSQL Distributed database\":[\"Created a peer to peer NoSQL Distributed Key/Value Pair cluster database written in Java and RESTlet API. Applied Vector Clocks for version control.\",\"Applied Vector Clocks as a timestamp in a distributed system that supports Availability and Partition Tolerance. Implemented conflict resolution.\"],\"Instagram-Clone\":[\"Developed a scalable 3-tier web application having functionalities of Instagram using MERN stack and deployed it. Wrote REST API calls in Node.\",\"Provisioned MongoDB Atlas for storing the user data and deployed the application on GKE. Used Terraform to spin up the infrastructure.\"],\"SmartPDF\":[\"Developed an application that intelligently extracts information form a research paper based on its structure and format.\",\"Used OCR algorithm to read text from the segments and summarized text by applying Natural Language Processing.\"],\"News-Article-Analysis-using-NLP\":[\"Developed an application for generating tags out of news articles and grouping together using NLP and topic modeling.\",\"All the articles were grouped into similar topics based on the context using LDA (Latent Dirichlet allocation).\"]}}\n module.exports= userData;", "import React, { useState } from \"react\";\n\nconst Footer = () => {\n  const [bgStyle] = useState({ backgroundColor: \"#f5f5f5\" });\n\n  return <footer style={bgStyle} className=\"mt-auto py-3 text-center\"></footer>;\n};\n\nexport default Footer;\n", "import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Navbar = (props) => {\n  let { firstName } = userData;\n  const [isTop, setIsTop] = useState(true);\n  useEffect(() => {\n    document.addEventListener(\"scroll\", () => {\n      const istop = window.scrollY < 200;\n      if (istop !== isTop) {\n        setIsTop(istop);\n      }\n    });\n  }, [isTop]);\n\n  return (\n    <nav\n      className={`navbar navbar-expand-lg fixed-top navbar-light ${\n        isTop ? \"bg-transparent\" : \"bg-gradient\"\n      } `}\n    >\n      <a\n        className=\"navbar-brand\"\n        href={process.env.PUBLIC_URL + \"/index.html#home\"}\n      >\n        Home\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n        aria-controls=\"navbarTogglerDemo02\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <div className={styles.navbarDiv}>\n          <div>\n            <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/index.html#aboutme\"}\n                >\n                  Me\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/index.html#experience\"}\n                >\n                  Experience\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/index.html#projects\"}\n                >\n                  Projects\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/index.html#education\"}\n                >\n                  Education\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a\n                  className=\"nav-link lead\"\n                  href={process.env.PUBLIC_URL + \"/index.html#skills\"}\n                >\n                  Skills\n                </a>\n              </li>\n            </ul>\n          </div>\n          <div className={styles.rightHeader}></div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n", "import React, { useState, useEffect } from \"react\";\nimport Typist from \"react-typist\";\nimport userData from \"../../config/userData\";\n\nconst Landing = (props) => {\n  let { firstName, lastName, headline, icons } = userData;\n  icons = icons == null ? [] : icons;\n  const [hoverstatus, setHoverstatus] = useState(\n    new Array(icons.length).fill(\"socialicons\")\n  );\n\n  const toggleHover = (data) => {\n    const newhoverStatus = [...hoverstatus];\n\n    if (data.event === \"enter\") {\n      newhoverStatus[data.icon.id] = \"socialiconshover\";\n      return setHoverstatus(newhoverStatus);\n    } else if (data.event === \"leave\") {\n      newhoverStatus[data.icon.id] = \"socialicons\";\n      return setHoverstatus(newhoverStatus);\n    }\n  };\n\n  return (\n    <div>\n      <div\n        id=\"home\"\n        className=\"title jumbotron jumbotron-fluid bg-transparent bgstyle text-light min-vh-100 d-flex align-content-center align-items-center flex-wrap m-0\"\n      >\n        <div id=\"stars\"></div>\n        <div className=\"container container-fluid text-center \">\n          <h1 className=\"display-1\">\n            {(firstName == null ? \"\" : firstName) +\n              \" \" +\n              (lastName == undefined ? \"\" : lastName)}\n          </h1>\n          <Typist className=\"lead\" cursor={{ show: false }}>\n            {\" \"}\n            {headline}\n          </Typist>\n          <div className=\"p-5\">\n            {icons.map((icon) =>\n              icon[\"handle\"] != null && icon[\"handle\"] != \"\" ? (\n                <a\n                  key={icon.id}\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={icon.url + \"\" + icon.handle}\n                  aria-label={`My ${icon.image.split(\"-\")[1]}`}\n                >\n                  <i\n                    className={`fab ${icon.image}  fa-3x ${\n                      hoverstatus[icon.id]\n                    }`}\n                    onMouseOver={() => toggleHover({ icon, event: \"enter\" })}\n                    onMouseOut={() => toggleHover({ icon, event: \"leave\" })}\n                  />\n                </a>\n              ) : null\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Landing;\n", "import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport userData from \"../../config/userData\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Me = () => {\n  let {\n    instaLink,\n    instaQuerry,\n    description1,\n    description2,\n    instagramId,\n  } = userData;\n  let desc1, desc2;\n  let myDescription = [];\n\n  instaLink = \"https://www.instagram.com/\";\n  instaQuerry = \"/?__a=1\";\n  if (localStorage.getItem(\"isChanged\") == \"true\") {\n    desc1 = JSON.parse(localStorage.getItem(\"userData\"))[\"description1\"];\n    desc2 = JSON.parse(localStorage.getItem(\"userData\"))[\"description2\"];\n    myDescription =\n      (desc1 == \"\" || desc1 == null) && (desc2 == \"\" || desc2 == null)\n        ? myDescription\n        : [desc1, desc2];\n    instagramId =\n      JSON.parse(localStorage.getItem(\"userData\"))[\"instagramId\"] == null ||\n      JSON.parse(localStorage.getItem(\"userData\"))[\"instagramId\"] == \"\"\n        ? instagramId\n        : JSON.parse(localStorage.getItem(\"userData\"))[\"instagramId\"];\n  } else {\n    myDescription =\n      (description1 == \"\" || description1 == null) &&\n      (description2 == \"\" || description1 == null)\n        ? myDescription\n        : [description1, description2];\n  }\n  const [instaProfilePic, setInstaProfilePic] = useState(\"\");\n  const [showInsta, setShowInsta] = useState(true);\n\n  useEffect(() => {\n    if (showInsta) {\n      handleRequest();\n    } else {\n      setInstaProfilePic(\n        \"https://lh3.googleusercontent.com/proxy/rHjhatFG9wFQciNqzUG19Wc7NoBb4RidNURhduWyvs5euim-Uc6unJD0qeQI9qSDAwbSwB_ZEl70E9eBiW9Ee2A\"\n      );\n    }\n  }, [showInsta, instagramId]);\n\n  const handleRequest = (e) => {\n    axios\n      .get(instaLink + instagramId + instaQuerry)\n      .then((response) => {\n        //console.log(\"response.data\", response.data);\n        return setInstaProfilePic(\n          response.data.graphql.user.profile_pic_url_hd\n        );\n      })\n      .catch((error) => {\n        setShowInsta(false);\n        return console.error(error.message);\n      });\n  };\n\n  return (\n    <div id=\"aboutme\" className={styles.aboutBg}>\n      <div className=\"container container-fluid p-5\">\n        <div className=\"row\">\n          {showInsta && (\n            <div className=\"col-5 d-none d-lg-block align-self-center\">\n              <img\n                className={styles.meImg}\n                src={instaProfilePic}\n                alt=\"profilepicture\"\n              />\n            </div>\n          )}\n          <div className={`col-lg-${showInsta ? \"7\" : \"12\"}`}>\n            <h1 className=\"display-4 mb-5 text-center\"> Me</h1>\n            <div className={styles.beginQuote}>\n              <h1 className={styles.quotes}>⅂</h1>\n            </div>\n            <div className={styles.fullDescDiv1}>{myDescription[0]}</div>\n            <br />\n            <div className={styles.fullDescDiv1}>{myDescription[1]}</div>\n            <div className={styles.endQuote}>\n              <h1 className={styles.quotes}>⅃</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Me;\n", "import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Button } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\nimport classes from \"../../styles/Styles.module.css\";\n\nconst ProjectCard = (props) => {\n  const [updated_at, setUpdatedAt] = useState(\"0 mints\");\n  const { name, svn_url, stargazers_count } = props.projectData;\n\n  useEffect(() => {\n    if (props.projectData.pushed_at == null) {\n      return setUpdatedAt(\"\");\n    } else {\n      const date = new Date(props.projectData.pushed_at);\n      const nowdate = new Date();\n      const diff = nowdate.getTime() - date.getTime();\n      const hours = Math.trunc(diff / 1000 / 60 / 60);\n\n      if (hours < 24) {\n        return setUpdatedAt(`${hours.toString()} hours ago`);\n      } else {\n        const monthNames = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"November\",\n          \"December\",\n        ];\n        const day = date.getDate();\n        const monthIndex = date.getMonth();\n        const year = date.getFullYear();\n        return setUpdatedAt(`on ${day} ${monthNames[monthIndex]} ${year}`);\n      }\n    }\n  }, [props.projectData.pushed_at]);\n\n  return (\n    <div className=\"col-md-6\">\n      <div>\n        <div className={styles.projectCard}>\n          <div className=\"card-body\">\n            <div className={styles.projectHeader}>\n              <h6>{name} </h6>\n              <h6 className={styles.projDate}>{props.projectDates[name]}</h6>\n            </div>\n            <hr />\n            <div className={styles.projectDevParent}>\n              <ul>\n                <li>\n                  {\" \"}\n                  <div className={styles.projDesc}>\n                    {props.projectDesc[name] != null\n                      ? props.projectDesc[name][0]\n                      : null}\n                  </div>\n                </li>\n                <li>\n                  {\" \"}\n                  <div className={styles.projDesc}>\n                    {props.projectDesc[name] != null\n                      ? props.projectDesc[name][1]\n                      : null}\n                  </div>\n                </li>\n              </ul>\n            </div>\n            <div className={styles.cloneAndRepoBtnDiv}>\n              <Button\n                href={`${svn_url}/archive/master.zip`}\n                className={styles.cloneBtn}\n              >\n                <i className=\"fab fa-github\" /> Clone Project\n              </Button>\n              <Button\n                href={svn_url}\n                target=\" _blank\"\n                variant=\"success\"\n                className={styles.cloneBtn}\n              >\n                <i className=\"fab fa-github\" /> View Repo\n              </Button>\n            </div>\n            <hr />\n            <p className=\"card-text\">\n              <span className=\"text-dark card-link mr-4\">\n                <i className=\"fab fa-github\" /> Stars{\" \"}\n                <span className=\"badge badge-dark\">{stargazers_count}</span>\n              </span>\n              <small className=\"text-muted\">\n                {updated_at == \"\" ? \"\" : \"Updated \" + updated_at}\n              </small>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectCard;\n", "import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ProjectCard from \"./ProjectCard\";\nimport userData from \"../../config/userData\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Projects = () => {\n  let {\n    gitHubLink,\n    githubId,\n    gitHubQuerry,\n    repos,\n    projectDesc,\n    projectDates,\n  } = userData;\n  const [projectsArray, setProjectsArray] = useState([]);\n  gitHubLink = \"https://api.github.com/users/\";\n  gitHubQuerry = \"/repos\";\n  useEffect(() => {\n    //console.log(\"project\", repos, projectDates, projectDesc);\n    axios\n      .get(gitHubLink + githubId + gitHubQuerry)\n      .then((response) => {\n        console.log(\"proj resp\", response.data);\n        let gitRepos = [];\n        for (let i in response.data) {\n          let repoObj = response.data[i];\n          console.log(\"repoObj name\", repoObj[\"name\"]);\n          if (repos.includes(repoObj[\"name\"])) gitRepos.push(repoObj);\n        }\n        let onlyNameArr = [];\n        for (let i in gitRepos) {\n          onlyNameArr.push(gitRepos[i][\"name\"]);\n        }\n        console.log(\"onlyNameArr\", onlyNameArr);\n\n        for (let i in repos) {\n          if (!onlyNameArr.includes(repos[i])) {\n            let dummyobj = {\n              name: repos[i],\n              svn_url: \"#\",\n              stargazers_count: \"0\",\n            };\n            gitRepos.push(dummyobj);\n          }\n        }\n        setProjectsArray(gitRepos);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <div id=\"projects\" className={[styles.projectsPage].join(\",\")}>\n      <div className=\"container container-fluid p-5\">\n        <h1 className=\"display-4 pb-5\">Projects</h1>\n        <div className=\"row\">\n          {projectsArray.map((project) => (\n            <ProjectCard\n              projectData={project}\n              projectDesc={projectDesc}\n              projectDates={projectDates}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Projects;\n", "import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport { Card } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\n\nconst Experience = () => {\n  let { experience } = userData;\n  const [expDisplay, setExpDisplay] = useState([]);\n\n  useEffect(() => {\n    //console.log(\"experience\", experience);\n    setExpDisplay(\n      experience == null\n        ? null\n        : experience.map((item) => {\n            //console.log(\"experience item\", item);\n            return (\n              <>\n                <Card className={styles.expMainCard}>\n                  <Card.Body>\n                    <div className={styles.expHeader}>\n                      <div className={styles.expCompanyAndTitle}>\n                        <div className={styles.expTitle}>\n                          <b>{item[0]}</b>\n                        </div>\n                        ,&nbsp;\n                        <div className={styles.expCompany}>{item[1]}</div>\n                      </div>\n                      <div className={styles.expDateAndPlace}>\n                        <div className={styles.expDate}>{item[2]} &nbsp;</div>\n                        <div>{\"|\"}</div>\n                        <div className={styles.expPlace}> &nbsp; {item[3]}</div>\n                      </div>\n                    </div>\n                    <hr />\n                    <ul>\n                      {item[4].map((deets) => {\n                        return <li>{deets}</li>;\n                      })}\n                    </ul>\n                  </Card.Body>\n                </Card>\n                <div className={styles.dottedLine}>\n                  <div>.</div>\n                  <div>.</div>\n                  <div>.</div>\n                </div>\n              </>\n            );\n          })\n    );\n  }, []);\n\n  return (\n    <>\n      <div id=\"experience\" className={[styles.experiencePage].join(\",\")}>\n        <div className=\"container container-fluid p-5\">\n          <h1 className=\"display-4 pb-5\">Experience</h1>\n          <div className=\"row\">{expDisplay}</div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Experience;\n", "import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport { Button, Card, Badge } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Education = () => {\n  let { education } = userData;\n  const [eduDisplay, setEduDisplay] = useState([]);\n  const [isFlippedObj, setIsFlippedObj] = useState({});\n  const [isChanged, setIsChanged] = useState();\n\n  const handleClick = (e, i) => {\n    e.preventDefault();\n    let tempObj = isFlippedObj;\n    tempObj[i] = !tempObj[i];\n    setIsFlippedObj(tempObj);\n    setIsChanged(JSON.stringify(tempObj));\n  };\n\n  useEffect(() => {\n    let tempObj = {};\n    for (let i in education) {\n      tempObj[i] = false;\n    }\n    setIsFlippedObj(tempObj);\n  }, []); //to set original flip state\n\n  useEffect(() => {\n    //console.log(\"education\", education);\n    setEduDisplay(\n      education == null\n        ? null\n        : education.map((item) => {\n            //console.log(\"education item\", item);\n            return (\n              <div className={styles.eduCardDivBothSides}>\n                <ReactCardFlip\n                  isFlipped={isFlippedObj[education.indexOf(item)]}\n                  flipDirection=\"horizontal\"\n                  flipSpeedBackToFront=\"0.3\"\n                  flipSpeedFrontToBack=\"0.3\"\n                  infinite=\"true\"\n                >\n                  <div>\n                    <Card>\n                      <Card.Body className={styles.eduCardMain}>\n                        <Card.Text>\n                          <div className={styles.eduHeader}>\n                            <div className={styles.eduHeaderLeft}>\n                              <div className={styles.eduDegree}>\n                                <b>\n                                  {item[0]}, {item[1]}\n                                </b>\n                              </div>\n                              <div className={styles.eduClg}>{item[2]}</div>\n                            </div>\n                            <div className={styles.eduHeaderRight}>\n                              <div>\n                                {item[3]} - {item[4]}\n                              </div>\n                              <div> {item[5]}</div>\n                            </div>\n                          </div>\n                        </Card.Text>\n                        <Card.Text>\n                          <ul className={styles.eduDeets}>\n                            {item[6].map((deets) => {\n                              return <li>{deets}</li>;\n                            })}\n                          </ul>\n                        </Card.Text>\n                        <Card.Text>\n                          <div className={styles.eduFooter}>\n                            <Button\n                              onClick={(e) =>\n                                handleClick(e, education.indexOf(item))\n                              }\n                              className={styles.eduBtn}\n                            >\n                              See Courses\n                            </Button>\n                          </div>\n                        </Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n\n                  <div>\n                    <Card className={styles.eduCardMainBack}>\n                      <div className={styles.eduBackHeaderLabel}>\n                        <h4>Courses</h4>\n                      </div>\n                      <Card.Body className={styles.eduCardMain}>\n                        <Card.Text>\n                          {item[7].map((course) => {\n                            return (\n                              <Badge className={styles.courseBadge}>\n                                {course}\n                              </Badge>\n                            );\n                          })}\n                        </Card.Text>\n                        <Card.Text>\n                          <div className={styles.eduFooter}>\n                            <Button\n                              onClick={(e) => {\n                                handleClick(e, education.indexOf(item));\n                              }}\n                              className={styles.eduBtn}\n                            >\n                              Back\n                            </Button>\n                          </div>\n                        </Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </div>\n                </ReactCardFlip>\n              </div>\n            );\n          })\n    );\n  }, [isChanged]);\n\n  return (\n    <div id=\"education\" className={[styles.educationPage].join(\",\")}>\n      <div className=\"container container-fluid p-5\">\n        <h1 className=\"display-4 pb-5\">Education</h1>\n      </div>\n      <div className={styles.eduCardsParentParent}>\n        <div className={styles.eduCardsParent}>{eduDisplay}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Education;\n", "import React, { useState, useEffect } from \"react\";\nimport userData from \"../../config/userData\";\nimport { Button, Card, Badge } from \"react-bootstrap\";\nimport styles from \"../../styles/Styles.module.css\";\nimport ReactCardFlip from \"react-card-flip\";\n\nconst Skills = () => {\n  let { skills } = userData;\n  if (localStorage.getItem(\"isChanged\") == \"true\") {\n    skills =\n      JSON.parse(localStorage.getItem(\"userData\"))[\"skills\"] == null ||\n      JSON.parse(localStorage.getItem(\"userData\"))[\"skills\"] == \"\"\n        ? skills\n        : JSON.parse(localStorage.getItem(\"userData\"))[\"skills\"].split(\",\");\n  } else skills = skills.split(\",\");\n  const [skillsDisplay, setSkillsDisplay] = useState([]);\n\n  useEffect(() => {\n    setSkillsDisplay(\n      skills.map((skill) => {\n        return <Badge className={styles.eachSkill}>{skill}</Badge>;\n      })\n    );\n  }, []);\n  return (\n    <div id=\"skills\" className={[styles.skillPage].join(\",\")}>\n      <div className=\"container container-fluid p-5\">\n        <h1 className=\"display-4 pb-5\">Skills</h1>\n\n        <div className={styles.skillsDisplayDiv}>{skillsDisplay}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Skills;\n", "import React from \"react\";\nimport Landing from \"../components/home/Landing\";\nimport Me from \"../components/home/Me\";\nimport Projects from \"../components/home/Projects\";\nimport Experience from \"../components/home/Experience\";\nimport Education from \"../components/home/Education\";\nimport Skills from \"../components/home/Skills\";\n\nconst Home = (props) => {\n  return (\n    <>\n      <Landing isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n      <Me isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n      <Experience\n        isChanged={props.isChanged}\n        setIsChanged={props.setIsChanged}\n      />\n      <Projects isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n      <Education\n        isChanged={props.isChanged}\n        setIsChanged={props.setIsChanged}\n      />\n      <Skills isChanged={props.isChanged} setIsChanged={props.setIsChanged} />\n    </>\n  );\n};\n\nexport default Home;\n", "import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./App.css\";\nimport Footer from \"./components/surround/Footer\";\nimport Navbar from \"./components/surround/Navbar\";\nimport Home from \"./pages/Home\";\n\nconst App = () => {\n  return (\n    <>\n      <Navbar />\n      <Home />\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n", "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n", "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],
    "sourceRoot": ""
  }